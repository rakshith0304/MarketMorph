<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0208.0338                               -->
<workbook original-version='18.1' source-build='2024.3.4 (20243.25.0208.0338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='amazon_products+' inline='true' name='federated.1kv4u5u1d6v3kh1dutemu0bowkcg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='amazon_products' name='textscan.151xdjw1hlfky41759cjv0oh9twy'>
            <connection class='textscan' directory='C:/Users/raksh/Documents/GitHub/MarketMorph/data' filename='amazon_products.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.151xdjw1hlfky41759cjv0oh9twy' name='amazon_products.csv' table='[amazon_products#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='product_name' ordinal='0' />
              <column datatype='integer' name='price' ordinal='1' />
              <column datatype='real' name='rating' ordinal='2' />
              <column datatype='integer' name='review_count' ordinal='3' />
              <column datatype='string' name='category' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.151xdjw1hlfky41759cjv0oh9twy' name='reddit_mentions.csv' table='[reddit_mentions#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='product_name' ordinal='0' />
              <column datatype='integer' name='upvotes' ordinal='1' />
              <column datatype='integer' name='num_comments' ordinal='2' />
              <column datatype='datetime' name='date' ordinal='3' />
              <column datatype='real' name='sentiment_score' ordinal='4' />
              <column datatype='string' name='sentiment_label' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[category]' value='[amazon_products.csv].[category]' />
          <map key='[date]' value='[reddit_mentions.csv].[date]' />
          <map key='[num_comments]' value='[reddit_mentions.csv].[num_comments]' />
          <map key='[price]' value='[amazon_products.csv].[price]' />
          <map key='[product_name (reddit_mentions.csv)]' value='[reddit_mentions.csv].[product_name]' />
          <map key='[product_name]' value='[amazon_products.csv].[product_name]' />
          <map key='[rating]' value='[amazon_products.csv].[rating]' />
          <map key='[review_count]' value='[amazon_products.csv].[review_count]' />
          <map key='[sentiment_label]' value='[reddit_mentions.csv].[sentiment_label]' />
          <map key='[sentiment_score]' value='[reddit_mentions.csv].[sentiment_score]' />
          <map key='[upvotes]' value='[reddit_mentions.csv].[upvotes]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[amazon_products.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[reddit_mentions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_name]</local-name>
            <parent-name>[amazon_products.csv]</parent-name>
            <remote-alias>product_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[amazon_products.csv_B58FC12D8B834E81BA6FD36167C529B0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[amazon_products.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[amazon_products.csv_B58FC12D8B834E81BA6FD36167C529B0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[amazon_products.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[amazon_products.csv_B58FC12D8B834E81BA6FD36167C529B0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[amazon_products.csv]</parent-name>
            <remote-alias>review_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[amazon_products.csv_B58FC12D8B834E81BA6FD36167C529B0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[amazon_products.csv]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[amazon_products.csv_B58FC12D8B834E81BA6FD36167C529B0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_name (reddit_mentions.csv)]</local-name>
            <parent-name>[reddit_mentions.csv]</parent-name>
            <remote-alias>product_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[reddit_mentions.csv_560A05E6A05A4D1B80A3A62594F3DE4A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>upvotes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[upvotes]</local-name>
            <parent-name>[reddit_mentions.csv]</parent-name>
            <remote-alias>upvotes</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[reddit_mentions.csv_560A05E6A05A4D1B80A3A62594F3DE4A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_comments</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_comments]</local-name>
            <parent-name>[reddit_mentions.csv]</parent-name>
            <remote-alias>num_comments</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[reddit_mentions.csv_560A05E6A05A4D1B80A3A62594F3DE4A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[reddit_mentions.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[reddit_mentions.csv_560A05E6A05A4D1B80A3A62594F3DE4A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sentiment_score]</local-name>
            <parent-name>[reddit_mentions.csv]</parent-name>
            <remote-alias>sentiment_score</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[reddit_mentions.csv_560A05E6A05A4D1B80A3A62594F3DE4A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sentiment_label]</local-name>
            <parent-name>[reddit_mentions.csv]</parent-name>
            <remote-alias>sentiment_label</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[reddit_mentions.csv_560A05E6A05A4D1B80A3A62594F3DE4A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='amazon_products.csv' datatype='table' name='[__tableau_internal_object_id__].[amazon_products.csv_B58FC12D8B834E81BA6FD36167C529B0]' role='measure' type='quantitative' />
      <column caption='reddit_mentions.csv' datatype='table' name='[__tableau_internal_object_id__].[reddit_mentions.csv_560A05E6A05A4D1B80A3A62594F3DE4A]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Num Comments' datatype='integer' name='[num_comments]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Product Name (Reddit Mentions.Csv)' datatype='string' name='[product_name (reddit_mentions.csv)]' role='dimension' type='nominal' />
      <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
      <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
      <column caption='Sentiment Label' datatype='string' name='[sentiment_label]' role='dimension' type='nominal' />
      <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
      <column caption='Upvotes' datatype='integer' name='[upvotes]' role='measure' type='quantitative' />
      <column-instance column='[num_comments]' derivation='None' name='[none:num_comments:qk]' pivot='key' type='quantitative' />
      <column-instance column='[product_name (reddit_mentions.csv)]' derivation='None' name='[none:product_name (reddit_mentions.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[sentiment_score]' derivation='None' name='[none:sentiment_score:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Num Comments,Sentiment Score)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:num_comments:qk]' />
          <groupfilter function='level-members' level='[none:sentiment_score:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:product_name (reddit_mentions.csv):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Fitness tracker watch, Fitness Tracker Watch 4 7 Day Battery Life...&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Samsung galaxy a05 Samsung Galaxy A05 A055 SIM Android&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Retro gaming console Gaming Console 40,000 Games 23 Emulators...&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Smart watch Watch Tracker Watches Mens Smartwatch Phones Iphone...&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Smart watch Watch 1000mah Battery 100 Day Time 1.85 Fitness Tracker...&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tracfone Motorola Moto G 5 Talk Text 4 Data 30 Day Plan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Retro game console Retro Game Console 620 Edition Games Video...&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Samsung galaxy tab Samsung Galaxy 10.1 Wifi Water SM T540NZKAXAR&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Smart watch Watch 1000 Mah 100 Day Battery Life 1.85 Fitness Tracker...&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Military smart watches Watches GPS 170 Sport Modes Flashlight...&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Smart watch Watch Answer 2.01″ 170 Sports Modes Fitness IP68 30 Days...&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='amazon_products.csv' id='amazon_products.csv_B58FC12D8B834E81BA6FD36167C529B0'>
            <properties context=''>
              <relation connection='textscan.151xdjw1hlfky41759cjv0oh9twy' name='amazon_products.csv' table='[amazon_products#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='product_name' ordinal='0' />
                  <column datatype='integer' name='price' ordinal='1' />
                  <column datatype='real' name='rating' ordinal='2' />
                  <column datatype='integer' name='review_count' ordinal='3' />
                  <column datatype='string' name='category' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='reddit_mentions.csv' id='reddit_mentions.csv_560A05E6A05A4D1B80A3A62594F3DE4A'>
            <properties context=''>
              <relation connection='textscan.151xdjw1hlfky41759cjv0oh9twy' name='reddit_mentions.csv' table='[reddit_mentions#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='product_name' ordinal='0' />
                  <column datatype='integer' name='upvotes' ordinal='1' />
                  <column datatype='integer' name='num_comments' ordinal='2' />
                  <column datatype='datetime' name='date' ordinal='3' />
                  <column datatype='real' name='sentiment_score' ordinal='4' />
                  <column datatype='string' name='sentiment_label' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[product_name]' />
              <expression op='[product_name (reddit_mentions.csv)]' />
            </expression>
            <first-end-point object-id='amazon_products.csv_B58FC12D8B834E81BA6FD36167C529B0' />
            <second-end-point object-id='reddit_mentions.csv_560A05E6A05A4D1B80A3A62594F3DE4A' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Amazon rating vs sentiment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Amazon rating vs sentiment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='amazon_products+' name='federated.1kv4u5u1d6v3kh1dutemu0bowkcg' />
          </datasources>
          <datasource-dependencies datasource='federated.1kv4u5u1d6v3kh1dutemu0bowkcg'>
            <column-instance column='[sentiment_score]' derivation='Avg' name='[avg:sentiment_score:qk]' pivot='key' type='quantitative' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
            <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Air Conditioners&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Bluetooth Speakers&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Drones&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Fitness Trackers&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Gaming Consoles&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Headphones&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Laptops&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Microwaves&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Monitors&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Power Banks&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Printers&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Projectors&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Refrigerators&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Robot Vacuums&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Smart TVs&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Smartphones&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Smartwatches&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Tablets&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Washing Machines&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Wireless Earbuds&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:sentiment_score:qk]</rows>
        <cols>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:rating:qk]</cols>
      </table>
      <simple-id uuid='{7732F4B4-BBFA-4C8F-813D-D7534A440178}' />
    </worksheet>
    <worksheet name='Category Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Category sentiment score &amp; engagement</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='amazon_products+' name='federated.1kv4u5u1d6v3kh1dutemu0bowkcg' />
          </datasources>
          <datasource-dependencies datasource='federated.1kv4u5u1d6v3kh1dutemu0bowkcg'>
            <column-instance column='[num_comments]' derivation='Avg' name='[avg:num_comments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_score]' derivation='Avg' name='[avg:sentiment_score:qk]' pivot='key' type='quantitative' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column caption='Num Comments' datatype='integer' name='[num_comments]' role='measure' type='quantitative' />
            <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:sentiment_score:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:num_comments:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:sentiment_score:qk]</rows>
        <cols>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]</cols>
      </table>
      <simple-id uuid='{DBF98D8D-7386-4D63-B3F1-2FCB133E3C77}' />
    </worksheet>
    <worksheet name='Most positive sentiment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Most positive sentiment products?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='amazon_products+' name='federated.1kv4u5u1d6v3kh1dutemu0bowkcg' />
          </datasources>
          <datasource-dependencies datasource='federated.1kv4u5u1d6v3kh1dutemu0bowkcg'>
            <column-instance column='[sentiment_score]' derivation='Avg' name='[avg:sentiment_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[product_name (reddit_mentions.csv)]' derivation='None' name='[none:product_name (reddit_mentions.csv):nk]' pivot='key' type='nominal' />
            <column caption='Product Name (Reddit Mentions.Csv)' datatype='string' name='[product_name (reddit_mentions.csv)]' role='dimension' type='nominal' />
            <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:sentiment_score:qk]' included-values='in-range'>
            <min>0.25</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:sentiment_score:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:sentiment_score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:sentiment_score:qk]' field-type='quantitative' max='0.50724843750000004' min='0.22' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:sentiment_score:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:sentiment_score:qk]</rows>
        <cols>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]</cols>
      </table>
      <simple-id uuid='{4E7EF02E-EA5D-4234-8A11-9192513E8441}' />
    </worksheet>
    <worksheet name='Most reddit comments'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Which products have the most Reddit comments?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='amazon_products+' name='federated.1kv4u5u1d6v3kh1dutemu0bowkcg' />
          </datasources>
          <datasource-dependencies datasource='federated.1kv4u5u1d6v3kh1dutemu0bowkcg'>
            <column-instance column='[product_name (reddit_mentions.csv)]' derivation='None' name='[none:product_name (reddit_mentions.csv):nk]' pivot='key' type='nominal' />
            <column caption='Num Comments' datatype='integer' name='[num_comments]' role='measure' type='quantitative' />
            <column caption='Product Name (Reddit Mentions.Csv)' datatype='string' name='[product_name (reddit_mentions.csv)]' role='dimension' type='nominal' />
            <column-instance column='[num_comments]' derivation='Sum' name='[sum:num_comments:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([num_comments])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:product_name (reddit_mentions.csv):nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:product_name (reddit_mentions.csv):nk]' member='&quot;Handheld game Game 220 Retro Video Games Gaming Player Battery 3.0...&quot;' />
                    <groupfilter function='member' level='[none:product_name (reddit_mentions.csv):nk]' member='&quot;New retro gaming Gaming Console Game Stick Pro 40,000 Video Games 23...&quot;' />
                    <groupfilter function='member' level='[none:product_name (reddit_mentions.csv):nk]' member='&quot;Retro game console Retro Game Console 620 Edition Games Video...&quot;' />
                    <groupfilter function='member' level='[none:product_name (reddit_mentions.csv):nk]' member='&quot;Retro game stick, Retro Game Stick Gaming Console 20000 Video Games...&quot;' />
                    <groupfilter function='member' level='[none:product_name (reddit_mentions.csv):nk]' member='&quot;Retro gaming console Gaming Console 40,000 Games HDMI Plug Game Stick...&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[sum:num_comments:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[sum:num_comments:qk]' field-type='quantitative' max='59696' min='30000' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]' value='101' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]' />
              <lod column='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[sum:num_comments:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1010' />
                <format attr='maxwidth' value='1010' />
                <format attr='minheight' value='1068' />
                <format attr='maxheight' value='1068' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[sum:num_comments:qk]</rows>
        <cols>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]</cols>
      </table>
      <simple-id uuid='{605A0EF3-8CBF-4152-851E-15C72A1AB5D2}' />
    </worksheet>
    <worksheet name='discussed the most on Reddit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Which categories are being discussed the most on Reddit?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='amazon_products+' name='federated.1kv4u5u1d6v3kh1dutemu0bowkcg' />
          </datasources>
          <datasource-dependencies datasource='federated.1kv4u5u1d6v3kh1dutemu0bowkcg'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[product_name (reddit_mentions.csv)]' derivation='Count' name='[cnt:product_name (reddit_mentions.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column caption='Product Name (Reddit Mentions.Csv)' datatype='string' name='[product_name (reddit_mentions.csv)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]' value='23' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]</rows>
        <cols>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[cnt:product_name (reddit_mentions.csv):qk]</cols>
      </table>
      <simple-id uuid='{1BEFB413-667F-4076-BCAB-9AD8C1672A4E}' />
    </worksheet>
    <worksheet name='trending perception'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Sentiment over time (trending perception)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='amazon_products+' name='federated.1kv4u5u1d6v3kh1dutemu0bowkcg' />
          </datasources>
          <datasource-dependencies datasource='federated.1kv4u5u1d6v3kh1dutemu0bowkcg'>
            <column-instance column='[sentiment_score]' derivation='Avg' name='[avg:sentiment_score:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[product_name (reddit_mentions.csv)]' derivation='None' name='[none:product_name (reddit_mentions.csv):nk]' pivot='key' type='nominal' />
            <column caption='Product Name (Reddit Mentions.Csv)' datatype='string' name='[product_name (reddit_mentions.csv)]' role='dimension' type='nominal' />
            <column caption='Sentiment Score' datatype='real' name='[sentiment_score]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]'>
            <groupfilter function='member' level='[none:product_name (reddit_mentions.csv):nk]' member='&quot;SAMSUNG Galaxy S24 5 SM S921B DS 8 SIM Factory GSM&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:sentiment_score:qk]</rows>
        <cols>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{8FE4BBE6-A1B7-4AD4-A80B-ABC672CBB1BA}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Most reddit comments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{862029C6-4057-4E46-A420-F19747017B32}' />
    </window>
    <window class='worksheet' name='Most positive sentiment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24493D24-9B36-4F39-AA33-69C26598297A}' />
    </window>
    <window class='worksheet' name='Category Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:num_comments:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:num_comments:qk]</field>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[avg:rating:qk]</field>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]</field>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:sentiment_label:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEF35FAB-DD68-4EFE-A295-58C3041CF6B3}' />
    </window>
    <window class='worksheet' name='Amazon rating vs sentiment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]</field>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]</field>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1675557A-803F-4634-B227-217EE653793E}' />
    </window>
    <window class='worksheet' name='discussed the most on Reddit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:category:nk]</field>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:price:qk]</field>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]</field>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name:nk]</field>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:review_count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED98485E-05D5-4AFC-A1D0-DE00CAEEE314}' />
    </window>
    <window class='worksheet' name='trending perception'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[none:product_name (reddit_mentions.csv):nk]</field>
            <field>[federated.1kv4u5u1d6v3kh1dutemu0bowkcg].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D35CEE69-2240-4ED7-A81E-29A06A477C30}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Amazon rating vs sentiment' width='192'>
      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
      5FXbiqGqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Category Trends' width='192'>
      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
      bqpz0ONjnwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Most positive sentiment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most reddit comments' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJvElEQVR4nO3dyW8b5x3G8Wc4nCFFiSIti6skS44Wy80CJAWapQhaOGkvvfbSay9F0f+o
      h16CAj4UvfTQ5tA2qIO0VRM5iq04sB1JliiJIinu65Azbw8xnAZk0AnCIUP+ns/NlEy+Wr6a
      eSn+NJpSSoFIKN+4F0A0TgyARGMAU8fBh/96Hw8PT756q9VE5qLw5Q3KRqVah2M18dHePk6O
      T/B1lN3Bg/37uHPnH8hclJ7dfpE5geV08eTgCJeXBTTbXVTyGTw4OMUnuzto9/7n8XsdVBst
      lEqlAY8AQCnc//gjnOe/fHu7VsBhJv/NPvxvyO/pvdMYOMhkMpip1HB8dIhZE/AZATTLeVSd
      ABrrayhclhCZ1bG3f4af/+x17H/6KYqJJB7ufQDffBr1UgkIBBDyKxSaGt56eQ0+w0TmIgfH
      voc///E+brz0CnKZDK49F0fxvAHD7MIJr2F7EXh8WkQne4xCsYxCy0ZiRoPTs5BXUWynZ3Fv
      rwLTb6BUaWAmFMDs4jJeXgujrOaQ6hbxl799hlRsFoZuoFqp4PpyzLPPFgOYOhq2br6EjbUU
      jvJ1VM4O4UABPhMLcyEcHR0jHA7DnL2Ca+kONN3AKy+/iMPHBwgHI9CVg+XlFShTR61SxQur
      aZimD91GB8+trcH0+bBx80WEg360o1fgUxoi0TBmr4TR7hkIhAKImDUEt7ahbIXk6lXAasOx
      mtDbOjRNA6ABmobV1RW0rC6y5yeoJF+AVsuiHE6jWclDm1fQE+vQag1vP1vf9lkgpdTTD4qm
      lnJwns0hlUqO9GHbtRLqKoDF+ZBnj/GtA7BtG7quD2s9RCPFTTCJxgBINAZAojEAEo0BkGgM
      gERjACQaAyDRGACJxgBINAZAojEAEo0BkGiu5gFUt4K79zOIx+ZRLNeRSsZhdTpYWkp7vT4i
      T7kKwOkBfkOhWmui27FQvMxCNyNwHAeO44B/WIImlbsAND+ChoHowgJKpRpS6Tjsbheazwef
      UpwHoInFgRgSjZtgEo0BkGgMgERjACQaAyDRGACJxgBItKH+aURHKbz78LOh3Jfu0/DTze2h
      3BfR1xlqAEopvHf4eCj35ff5GAB5jqdAJBoDINEYAInGAEg0BkCiuZsIsyq4u59BOrmAaquL
      hfkQOp0OlpaWvF4fkafcDcTYgN9wcJbNw/RpuOjUEAj2T4Q5Q54M6/V6//+diL4FlxNhBoKG
      icRKEhf5IlLJGHoDJsJsxxnu4vy8hBl5y9V3mBEMYevGDQBAJBLxdEFEo8RNMInGAEg0BkCi
      MQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARHMVgLIq+OjuPlqWhd3dPRQK
      BWQyp16vjchzruYBbBswDAef7t1Dud7ATM4PY4YTYTT53I1c+QwEzQC2tp+H1ajDp+vo9TgR
      RpPP1XeYPxDC1tYWACAYmfd0QUSjxE0wicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYA
      SDQGQKIxABKNAZBoDIBEc3mNsDJ290+xtpLAyekFUuk4up0OlpeXvV4fkafcTYT1NBh+G+0u
      EIvHUCvmAJMTYTT53I1c6SZmAjPwwUKt1kJyeQ0OrxFGU8DlRNgMNrc2AQCplKfrIRopboJJ
      NAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACSaq5dDO1YZu/dP
      kYrPI1+qIZ2ModPuYGWFE2E02dwF0NNgGjYKlTYS83O4LOZgcCKMpoC7kSu/iZngDJKJOPKl
      Gq4tX+c1wmgquJsIM2ewufnFRFh4PuLpgohGiZtgEo0BkGgMgERjACQaAyDRGACJxgBINAZA
      ojEAEo0BkGgMgERjACQaAyDRGACJ5u4aYUrh4/98iNhSAvlCFelUAlanjZWVFa/XR+QpVwFU
      cxnkihWYkTCcbg+lUg5+ToTRFHAVQCSxgjd/GIUDG9l8BalkDD1eI4ymgOvvsFA4DADYCEc9
      W4xrf30fKJWHc19vvwlEOeUm1WT+iG00gWp9OPdlD/eoRZOFzwKRaAyARGMAJBoDINH6Arh9
      +/Y41kE0Fn0BVKtV3L59G/X6kJ5lIfoO6wtgY2MD8XgcOzs741gP0Uj1/R7g1q1b41gH0VgM
      3ATX6g1YVnfUayEaub4AGs0W/vnhHn77zh9gdRkBTbe+AD57dIg/vfse3v7Ra9CgjWNNRCPT
      twdYXIjiN7/8BbY3ro9jPUQj1RfA6koaSin0ej2+HJmm3sBN8L27u/j9795B6+m/lVLY/fcO
      shdneHhwjFwuh+PjkxEuk8gbA3/EJ5IJ/Pgnbz17YzWXQb5cAy7y8PUUuh0DgeD4JsJ0pYa2
      O7FtG4qTZ2L1BaCUhTt/v4NIYgnp69cAPJ0Ie+MKdMOHzHkBycQi7F5vfBNh2vA257quAzzV
      E6vvK69pJja31tCyza/cHgrPAQDWn0ZBNA0G7gH8moXHB6cY7gkN0XfPwACUDtQLFXBYkKbd
      wJPf2dBVbD6vQx/1aohGbOARoFgq48qVCH8PTFNvYADh8Bwsy+IegKbewFOgbseCZXEHQNNv
      4BGgbVkIhYI8BaKpNzAAQ+vig527PAWiqTfwFGguGsP3bvh5BKCp13cEuDx6iLlrN3E9tQh7
      HCsiGqG+AObjcTzY+QCn5RrMQf+DaIr0BWCEonjx5jois7M8AtDUG7gH+PzRQ7TsIDfBNPUG
      Pguk+3To/q++ECKXzcJWCtnzLJrNJqrV6kgWSOSlgUeA5dVV3H9w9OzfdqeJJ0cZ+IN+nOeK
      qFcvoQWjmJub40AMTbSvnQTxadqzU6BWqwnH6SJ/WUG7UUEsvg7banEghiZe31e+Uc7j471P
      8Oggh9duvQkAmIsu4tU3Fr94h/X1kS6QyEt9e4Bus4rPj7O4cXObL4emqdd3BIim1/HrX/Gn
      PMnAC2SQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINFcB3Bxdo5mo4pH
      B0/Q4EQYTQlXkyC9TgPHx2d4/vsvwA+Fs5ND+DgRRlPAVQDtVhuOY+Hw8WMoZWJxMYZOq82J
      MJp4rr7yc9GrePWN171eC9HIcRNMojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0B
      kGgMgERjACQaAyDRXAeQPT1Ds1nF508yaDSaqFQqXq6LaCTcTYS1G8hkzrHgxBACcJw5hBmM
      IhwOcyKMJpq7ibB2G47Thd3t4qJhIZ2Mo93iNcJo8rmeCPvB61e9XgvRyHETTKIxABKNAZBo
      DIBEYwAkGgMg0f4Lxp24ZDDo3bEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='discussed the most on Reddit' width='192'>
      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
      CBZcav4/CVHaQkbUQpwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='trending perception' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
